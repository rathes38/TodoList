# This file contains the fastlane.tools configuration

commits_to_this_commit = ''
commits_from_that_commit = ''
notes = ''
release_number = ''
sender, recipients = 'yanoratheesh@gmail.com', 'yanoratheesh@gmail.com'

default_platform(:ios)

platform :ios do
  desc "iOS - Build Automation"

lane :build do

notification(subtitle: "Finished Building", message: "Ready to upload...")

 run_test_cases

 set_build_number

 prepare_build

 get_changelog

 upload_build

end

lane :run_test_cases do |lane|

  error do |lane, exception|
    message = 'Unit Test Failed'
    subject = 'Unit Test Result'
    send_unit_test_failure_email(msg:message, sub: subject)
  end

  run_tests(project: "TodoList.xcodeproj",
    devices: ["iPhone 13 Pro"],
    scheme: "TodoListTests")

end

lane :set_build_number do 

  appcenter_version = appcenter_fetch_version_number(
    api_token: "b984214da7624272c75a7e5832509ce2550115a3",
    owner_name: "yanoratheesh-gmail.com",
    app_name: "TodoList"
  )
  release_number = appcenter_version['build_number']
  increment_build_number(
    build_number: release_number
  )
  release_number = increment_build_number

end

lane :get_changelog do
     
  commit_id_path = File.expand_path('../last_commit_id.txt', __FILE__)
  File.open(commit_id_path, "r") do |f|
    f.each_line do |line|
      commits_from_that_commit = line
    end
  end

  commits_to_this_commit = ENV.fetch('GIT_COMMIT') do
    `git rev-parse --verify HEAD`.strip
  end

  if commits_from_that_commit.length == 0 
    commits_from_that_commit = ENV.fetch('GIT_PREVIOUS_SUCCESSFUL_COMMIT') do
      `git rev-parse --verify #{commits_to_this_commit}~6`.strip
    end 
  end

  notes = changelog_from_git_commits(
  between: [commits_from_that_commit, commits_to_this_commit],
    pretty: "%s",
    merge_commit_filtering: "exclude_merges"
  ) 
  if notes.length == 0 
    notes = 'There is no changes available in this build. Previous build also upto date!!'
  end

  commit = last_git_commit[:commit_hash]
  File.write(commit_id_path, commit)
  puts 'Release notes: '+notes
  end
end


lane :prepare_build do

  build_app(
   project: "TodoList.xcodeproj",
    configuration: "Debug",
    scheme: "TodoList",
    silent: true,
    clean: true,
    export_method: "development",
    output_directory: "Build", # Destination directory. Defaults to current directory.
    output_name: "my-app.ipa",       # specify the name of the .ipa file to generate (including file extension)
    #sdk: "iOS 11.1"        # use SDK as the name or path of the base SDK when building the project.
  )
end

lane :upload_build do 

  appcenter_upload(
   api_token: "b984214da7624272c75a7e5832509ce2550115a3",
   owner_name: "yanoratheesh-gmail.com",
   owner_type: "user", # Default is user - set to organization for appcenter organizations
   app_name: "TodoList",
   release_notes: notes,
   notify_testers: true # Set to false if you don't want to notify testers of your new release (default: `false`)
  )
end

private_lane :send_unit_test_failure_email do |params|
  mailgun(
    to: recipients,
    reply_to: sender,
    success: false,
    from: 'Ratheesh',
    subject: params[:sub],
    message: params[:msg],
    postmaster:'postmaster@sandbox8b140aa9d4c843ef96088dc758a274df.mailgun.org',
    app_link:'www.google.com',
    apikey:'920aa936b4dd3e535f24d673ac936ea4-fe066263-e6a33501'
  )
end